---
import Layout from "../layouts/Main.astro"

type Root = Root2[]

interface Root2 {
  id: number
  date: string
  date_gmt: string
  guid: Guid
  modified: string
  modified_gmt: string
  slug: string
  status: string
  type: string
  link: string
  title: Title
  content: Content
  excerpt: Excerpt
  author: number
  featured_media: number
  comment_status: string
  ping_status: string
  sticky: boolean
  template: string
  format: string
  meta: Meta
  categories: number[]
  tags: any[]
  class_list: string[]
  jetpack_featured_media_url: string
  jetpack_publicize_connections: any[]
  jetpack_shortlink: string
  jetpack_sharing_enabled: boolean
  jetpack_likes_enabled: boolean
  "jetpack-related-posts": any[]
  _links: Links
  _embedded: Embedded
}

interface Guid {
  rendered: string
}

interface Title {
  rendered: string
}

interface Content {
  rendered: string
  protected: boolean
}

interface Excerpt {
  rendered: string
  protected: boolean
}

interface Meta {
  advanced_seo_description: string
  jetpack_seo_html_title: string
  jetpack_seo_noindex: boolean
  _coblocks_attr: string
  _coblocks_dimensions: string
  _coblocks_responsive_height: string
  _coblocks_accordion_ie_support: string
  jetpack_post_was_ever_published: boolean
  reader_suggested_tags: string
  _jetpack_newsletter_access: string
  _jetpack_dont_email_post_to_subs: boolean
  _jetpack_newsletter_tier_id: number
  _jetpack_memberships_contains_paywalled_content: boolean
  _jetpack_memberships_contains_paid_content: boolean
  footnotes: string
  jetpack_publicize_message: string
  jetpack_publicize_feature_enabled: boolean
  jetpack_social_post_already_shared: boolean
  jetpack_social_options: JetpackSocialOptions
}

interface JetpackSocialOptions {
  image_generator_settings: ImageGeneratorSettings
  version: number
}

interface ImageGeneratorSettings {
  template: string
  enabled: boolean
}

interface Links {
  self: Self[]
  collection: Collection[]
  about: About[]
  author: Author[]
  replies: Reply[]
  "version-history": VersionHistory[]
  "predecessor-version": PredecessorVersion[]
  "wp:featuredmedia"?: Featuredmedum[]
  "wp:attachment": WpAttachment[]
  "wp:term": WpTerm[]
  curies: Cury[]
}

interface Self {
  href: string
  targetHints: TargetHints
}

interface TargetHints {
  allow: string[]
}

interface Collection {
  href: string
}

interface About {
  href: string
}

interface Author {
  embeddable: boolean
  href: string
}

interface Reply {
  embeddable: boolean
  href: string
}

interface VersionHistory {
  count: number
  href: string
}

interface PredecessorVersion {
  id: number
  href: string
}

interface Featuredmedum {
  embeddable: boolean
  href: string
}

interface WpAttachment {
  href: string
}

interface WpTerm {
  taxonomy: string
  embeddable: boolean
  href: string
}

interface Cury {
  name: string
  href: string
  templated: boolean
}

interface Embedded {
  author: Author2[]
  "wp:featuredmedia"?: Featuredmedum2[]
  "wp:term": WpTerm2[][]
}

interface Author2 {
  code: string
  message: string
  data: Data
}

interface Data {
  status: number
}

interface Featuredmedum2 {
  code: string
  message: string
  data: Data2
}

interface Data2 {
  status: number
}

interface WpTerm2 {
  id: number
  link: string
  name: string
  slug: string
  taxonomy: string
  _links: Links2
}

interface Links2 {
  self: Self2[]
  collection: Collection2[]
  about: About2[]
  "wp:post_type": WpPostType[]
  curies: Cury2[]
}

interface Self2 {
  href: string
  targetHints: TargetHints2
}

interface TargetHints2 {
  allow: string[]
}

interface Collection2 {
  href: string
}

interface About2 {
  href: string
}

interface WpPostType {
  href: string
}

interface Cury2 {
  name: string
  href: string
  templated: boolean
}

const urlRequest =
  "https://public-api.wordpress.com/wp/v2/sites/tylerrichardsdesigns.wordpress.com/posts?&_embed"
const res = await fetch(urlRequest)
const posts = await res.json()
---

<Layout title="Welcome to Astro.">
  <div id="post-grid" class="container w-full grid gap-4">
    {
      posts.map((post: Root2) => (
        <article class="grid grid-rows-subgrid row-span-2 gap-y-0">
          <div
            class="w-full h-96 bg-cover bg-center"
            style=`background-image: url(${post['jetpack_featured_media_url']})`
          />
          <h2
            set:html={post.title.rendered}
            class="bg-black text-white py-4 px-12 flex items-center justify-center text-center"
          />
        </article>
      ))
    }
  </div>
</Layout>

<style>
  #post-grid {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }
</style>
